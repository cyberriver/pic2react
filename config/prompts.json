{
  "visionAnalysis": {
    "systemPrompt": "Ты - эксперт по анализу UI интерфейсов. Твоя задача - проанализировать изображение и создать структурированные данные для каждого UI элемента.",
    "userPrompt": "Проанализируй это изображение UI интерфейса и создай структурированные данные для каждого UI элемента.\n\nДля каждого элемента укажи:\n1. type (button, chart, card, table, header, navigation, sidebar, form, input, text, image, etc.)\n2. properties (стили, размеры, цвета, текст, данные)\n3. position (x, y, width, height)\n4. children (вложенные элементы)\n\nВерни результат в формате JSON со следующей структурой:\n{\n  \"elements\": [\n    {\n      \"id\": \"unique_id\",\n      \"type\": \"chart|card|table|button|header|navigation|sidebar|form|input|text|image|container\",\n      \"properties\": {\n        \"title\": \"Заголовок элемента\",\n        \"text\": \"Текст элемента\",\n        \"value\": \"Значение\",\n        \"color\": \"#1976d2\",\n        \"backgroundColor\": \"#ffffff\",\n        \"textColor\": \"#000000\",\n        \"fontSize\": \"14px\",\n        \"fontWeight\": \"500\",\n        \"borderRadius\": \"8px\",\n        \"border\": \"1px solid #e0e0e0\",\n        \"padding\": \"16px\",\n        \"margin\": \"8px\",\n        \"width\": \"100%\",\n        \"height\": \"auto\",\n        \"data\": {},\n        \"config\": {}\n      },\n      \"position\": {\n        \"x\": 20,\n        \"y\": 80,\n        \"width\": 400,\n        \"height\": 300\n      },\n      \"children\": [\n        {\n          \"id\": \"child_id\",\n          \"type\": \"text\",\n          \"properties\": {\n            \"text\": \"Дочерний элемент\"\n          },\n          \"position\": {\n            \"x\": 30,\n            \"y\": 90,\n            \"width\": 200,\n            \"height\": 20\n          }\n        }\n      ]\n    }\n  ],\n  \"layout\": {\n    \"type\": \"flexbox|grid|absolute\",\n    \"direction\": \"row|column\",\n    \"gap\": 16,\n    \"padding\": 24,\n    \"justifyContent\": \"flex-start|center|flex-end|space-between\",\n    \"alignItems\": \"flex-start|center|flex-end|stretch\"\n  },\n  \"colors\": {\n    \"primary\": \"#1976d2\",\n    \"secondary\": \"#dc004e\",\n    \"background\": \"#ffffff\",\n    \"text\": \"#000000\",\n    \"accent\": \"#ff6b6b\",\n    \"success\": \"#4caf50\",\n    \"warning\": \"#ff9800\",\n    \"error\": \"#f44336\"\n  },\n  \"typography\": {\n    \"primaryFont\": \"Roboto, sans-serif\",\n    \"primarySize\": \"14px\",\n    \"headingSizes\": [\"24px\", \"20px\", \"16px\"],\n    \"lineHeight\": \"1.5\"\n  },\n  \"metadata\": {\n    \"totalElements\": 0,\n    \"confidence\": 0.95,\n    \"processingTime\": 0\n  }\n}\n\nВажно:\n- Определи точные координаты и размеры для каждого элемента\n- Извлеки весь видимый текст и значения\n- Определи цвета в hex формате\n- Оцени уверенность в каждом определении (0-1)\n- Сгруппируй связанные элементы в контейнеры с children\n- Определи общую структуру макета и стили\n- Для графиков и диаграмм добавь данные в properties.data\n- Для таблиц добавь колонки в properties.columns\n- ВАЖНО: Верни только валидный JSON без дополнительного текста",
    "fallbackPrompt": "Если не можешь проанализировать изображение, верни минимальную структуру:\n{\n  \"elements\": [\n    {\n      \"id\": \"fallback_element\",\n      \"type\": \"container\",\n      \"properties\": {\n        \"title\": \"Не удалось проанализировать\",\n        \"text\": \"Попробуйте другое изображение\",\n        \"backgroundColor\": \"#f5f5f5\",\n        \"textColor\": \"#666666\"\n      },\n      \"position\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 400,\n        \"height\": 200\n      },\n      \"children\": []\n    }\n  ],\n  \"layout\": {\n    \"type\": \"flexbox\",\n    \"direction\": \"column\",\n    \"gap\": 16,\n    \"padding\": 24\n  },\n  \"colors\": {\n    \"primary\": \"#1976d2\",\n    \"background\": \"#ffffff\",\n    \"text\": \"#000000\"\n  },\n  \"typography\": {\n    \"primaryFont\": \"Roboto, sans-serif\",\n    \"primarySize\": \"14px\"\n  },\n  \"metadata\": {\n    \"totalElements\": 1,\n    \"confidence\": 0.1,\n    \"processingTime\": 0\n  }\n}"
  },
  "errorHandling": {
    "maxRetries": 3,
    "retryDelay": 1000,
    "fallbackEnabled": true
  }
}
